{


/* OS X has three main files which specify the key bindings used by Cocoa applications: */

/* System binary .dict file: 
  [  As this is a binary file, it's editable through keybindingsEditor app (installed -downloaded from Internet: bitart -BITart Consulting, Gerd Knops)  ]
     System/Library/Frameworks/AppKit.framework/Resources/StandardKeyBinding.dict is an alias of:
     System/Library/Frameworks/AppKit.framework/Versions/C/Resources/StandardKeyBinding.dict */

/* Computer text .dict file:
     /Library/KeyBindings/DefaultKeyBinding.dict */

/* User text .dict file:  
     THIS FILE !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! 
     ~/Library/KeyBindings/DefaultKeyBinding.dict */








      /* Additional Emacs bindings */

      /* 🔵🔵🔵 V I M: VIM EDITOR LAYERS */

/*    // redundant shortcut for testing
      // move paragraph up
      "^~@O" =  (selectParagraph:, setMark:, deleteToMark:, moveLeft:,
                 moveToBeginningOfParagraph:, yank:, moveToBeginningOfParagraph:, moveLeft:);
*/




      "^~@V" = {




/*      // redundant shortcut for testing
        // move paragraph up
        "o" = (selectParagraph:, setMark:, deleteToMark:, moveLeft:,
               moveToBeginningOfParagraph:, yank:, moveToBeginningOfParagraph:, moveLeft:);
*/


        // beginning of shortcut mapping
        //
        /* 🔵🔵🔵 PVIM: PERSONAL VIM */
        "p" = {

          /* line 🔵 1 PVIM: YUIOP */

            /* Move line/paragraph up */
            /*   y[PVIM]  */   "y" = (selectParagraph:, setMark:, deleteToMark:, moveLeft:,
                                      moveToBeginningOfParagraph:, yank:, moveToBeginningOfParagraph:, moveLeft:);

            /*  •U[PVIM]  */   "u" =  moveToBeginningOfLine:;                          /* SINGLE_TAP */
            /* ••U[PVIM]  */   "U" = (moveBackward:, moveToBeginningOfParagraph:);     /* DOUBLE_TAP */

            /*  •I[PVIM] */    "i" =  moveWordBackward:;                               /* SINGLE_TAP */
            /* ••I[PVIM] */    "I" =  moveSubWordBackward:; /* Implement this for Xcode   DOUBLE_TAP */

            /*  •O[PVIM] */    "o" =  moveWordForward:;                                /* SINGLE_TAP */
            /* ••O[PVIM] */    "O" =  moveSubWordForward:;  /* Implement this for Xcode   DOUBLE_TAP */

            /*  •P[PVIM] */    "p" =  moveToEndOfLine:;                                /* SINGLE_TAP */
            /* ••P[PVIM] */    "P" = (moveForward:, moveToEndOfParagraph:);            /* DOUBLE_TAP */


          /* line 🔵 2 PVIM: HJKL(SPACE) */

            /* H[PVIM]  */              "h" = centerSelectionInVisibleArea:;
            /* J[PVIM]  */              "j" = moveBackward:;
            /* K[PVIM]  */              "k" = moveDown:;
            /* L[PVIM]  */              "l" = moveUp:;
            /* GHKN_SPACE[PVIM] */ "\U0020" = moveForward:;


          /* line 🔵 3 PVIM: NM(ESC),(BSPC),(ENT) */

            /* Move line/paragraph down */
            /* N[PVIM] */               "n" = (selectParagraph:, setMark:, deleteToMark:, moveToEndOfParagraph:,
                                               moveRight:,    setMark:,    yank:,    moveLeft:,   selectToMark:, moveToEndOfParagraph:);

          /* M[PVIM] */                   "m" = moveToBeginningOfDocument:;
          /* GHKN_ESCAPE[PVIM] */    "\U001B" = pageUp:;
          /* GHKN_BACKSPACE[PVIM] */ "\U007F" = pageDown:;
          /* GHKN_ENTER[PVIM] */     "\U000D" = moveToEndOfDocument:;
        }; /* 🔴🔴🔴 PVIM: PERSONAL VIM */



        /* 🔵🔵🔵 DVIM: DELETE VIM */
        "d" = {

          /* line 🔵 1 DVIM: YUIOP */

            /* empty */
            /*   Y[DVIM] */ /* "y" = empty :; */

            /*  •U[DVIM] */    "u" = deleteToBeginningOfLine:;                       /* SINGLE_TAP */
            /* ••U[DVIM] */    "U" = (moveBackward:, 
                                      moveToBeginningOfParagraphAndModifySelection:, 
                                      delete:, deleteForward:);                      /* DOUBLE_TAP */

            /*  •I[DVIM] */    "i" = deleteWordBackward:;
            /* ••I[DVIM]       "I" = deleteSubWordBackward:; Implement this for Xcode   DOUBLE_TAP */

            /*  •O[DVIM] */    "o" = deleteWordForward:;
            /* ••O[DVIM]       "O" = deleteSubWordForward:;  Implement this for Xcode   DOUBLE_TAP */

            /*  •P[DVIM] */    "p" = deleteToEndOfLine:;
            /* ••P[DVIM] */    "P" = (moveToEndOfParagraphAndModifySelection:,
                                      delete:, deleteBackward:, moveForward:);       /* DOUBLE_TAP */

          /* line 🔵 2 DVIM: HJKL(SPACE) */

            /* Yank back killed text */
            /* H[DVIM] */                "h" = yank:;

            /* J[DVIM] */                "j" =  deleteBackward:;
            /* K[DVIM] */                "k" = (moveUpAndModifySelection:,   delete:); /* deleteUpward: */
            /* L[DVIM] */                "l" = (moveDownAndModifySelection:, delete:); /* deleteDownward:; */
            /* GHKN_SPACE[DVIM] */  "\U0020" =  deleteForward:;

          /* line 🔵 3 DVIM: NM(ESC),(BSPC),(ENT) */

            /* empty */
            /* N[DVIM] */              /* "n" = empty :; */

            /* M[DVIM] */                   "m" = (moveToBeginningOfDocumentAndModifySelection:, delete:);
            /* GHKN_ESCAPE[DVIM] */    "\U001B" = (pageUpAndModifySelection:, delete:);
            /* GHKN_BACKSPACE[DVIM] */ "\U007F" = (pageDownAndModifySelection:, delete:);
            /* GHKN_ENTER[DVIM] */     "\U000D" = (moveToEndOfDocumentAndModifySelection:, delete:);
        }; /* 🔴🔴🔴 DVIM: DELETE VIM */



        /* 🔵🔵🔵 SVIM: SELECT VIM */
        "s" = {

          /* line 🔵 1 SVIM: YUIOP */

            /* Select previous paragraph */
            /*   Y[SVIM] */    "y" = (moveBackward:, moveToBeginningOfParagraph:,
                                      moveBackward:, moveToBeginningOfParagraphAndModifySelection:);

            /*  •U[SVIM] */    "u" = moveToBeginningOfLineAndModifySelection:;  /* SINGLE_TAP */
            /* ••U[SVIM] */    "U" = moveParagraphBackwardAndModifySelection:;  /* DOUBLE_TAP */

            /*  •I[SVIM] */    "i" = moveWordBackwardAndModifySelection:;
            /*  •O[SVIM] */    "o" = moveWordForwardAndModifySelection:;

            /*  •P[SVIM] */    "p" = moveToEndOfLineAndModifySelection:;
            /* ••P[SVIM] */    "P" = moveParagraphForwardAndModifySelection:;

          /* line 🔵 2 SVIM: HJKL(SPACE) */

            /* H[SVIM] */             /* "h" = empty */

            /* J[SVIM] */                "j" = moveBackwardAndModifySelection:;
            /* K[SVIM] */                "k" = moveUpAndModifySelection:;
            /* L[SVIM] */                "l" = moveDownAndModifySelection:;
            /* GHKN_SPACE[SVIM] */  "\U0020" = moveForwardAndModifySelection:;

          /* line 🔵 3 SVIM: NM(ESC),(BSPC),(ENT) */

          /* Select next paragraph */
            /* N[SVIM] */      "n" = (moveForward:, moveToEndOfParagraph:,
                                      moveForward:, moveToEndOfParagraphAndModifySelection:);

            /* M[SVIM] */                   "m" = moveToBeginningOfDocumentAndModifySelection:;
            /* GHKN_ESCAPE[SVIM] */    "\U001B" = pageUpAndModifySelection:;
            /* GHKN_BACKSPACE[SVIM] */ "\U007F" = pageDownAndModifySelection:;
            /* GHKN_ENTER[SVIM] */     "\U000D" = moveToEndOfDocumentAndModifySelection:;
        }; /* 🔴🔴🔴 SVIM: SELECT VIM */



        /* 🔵🔵🔵 XVIM: eXTRA VIM */
        "x" = {

          /* line 🔵 1 XVIM: YUIOP */

            /* Copy previous paragraph (for only select previous paragraph, keep only line2 and line3) */
            /*   Y[XVIM] */    "y" = (setMark:,
                                      moveBackward:, moveToBeginningOfParagraph:,
                                      moveBackward:, moveToBeginningOfParagraphAndModifySelection:,
                                      copy:,
                                      swapWithMark:);
            /*  •U[XVIM] */    "u" = uppercaseWord:;
            /*  •I[XVIM] */    "i" = capitalizeWord:;
            /*  •O[XVIM] */    "o" = transpose:;
            /*  •P[XVIM] */    "p" = lowercaseWord:;

          /* line 🔵 2 XVIM: HJKL(SPACE) */

            /* Duplicate current paragraph below, without moving cursor position */
            /* H[XVIM] */              "h" =
                      (setMark:, moveToBeginningOfParagraphAndModifySelection:, moveToEndOfParagraphAndModifySelection:,
                       delete:, yank:, insertNewlineIgnoringFieldEditor:, yank:, swapWithMark:);

            /* J[XVIM] */              "j" =
              (moveUp:, moveUp:, moveUp:, moveUp:, moveUp:,
               moveUp:, moveUp:, moveUp:, moveUp:, moveUp:,
               moveUp:, moveUp:, moveUp:, moveUp:, moveUp:,
               moveUp:, moveUp:, moveUp:, moveUp:, moveUp:,
               moveUp:, moveUp:, moveUp:, moveUp:, moveUp:);

            /* K[XVIM] */              "k" =
              (moveUp:, moveUp:, moveUp:, moveUp:, moveUp:,
               moveUp:, moveUp:, moveUp:, moveUp:, moveUp:,
               moveUp:, moveUp:, moveUp:, moveUp:, moveUp:,
               moveUp:, moveUp:, moveUp:, moveUp:, moveUp:,
               moveUp:, moveUp:, moveUp:, moveUp:, moveUp:,
               moveUp:, moveUp:, moveUp:, moveUp:, moveUp:,
               moveUp:, moveUp:, moveUp:, moveUp:, moveUp:,
               moveUp:, moveUp:, moveUp:, moveUp:, moveUp:,
               moveUp:, moveUp:, moveUp:, moveUp:, moveUp:,
               moveUp:, moveUp:, moveUp:, moveUp:, moveUp:,
               centerSelectionInVisibleArea:);

            /* L[XVIM] */              "l" =
              (moveDown:, moveDown:, moveDown:, moveDown:, moveDown:,
               moveDown:, moveDown:, moveDown:, moveDown:, moveDown:,
               moveDown:, moveDown:, moveDown:, moveDown:, moveDown:,
               moveDown:, moveDown:, moveDown:, moveDown:, moveDown:,
               moveDown:, moveDown:, moveDown:, moveDown:, moveDown:,
               moveDown:, moveDown:, moveDown:, moveDown:, moveDown:,
               moveDown:, moveDown:, moveDown:, moveDown:, moveDown:,
               moveDown:, moveDown:, moveDown:, moveDown:, moveDown:,
               moveDown:, moveDown:, moveDown:, moveDown:, moveDown:,
               moveDown:, moveDown:, moveDown:, moveDown:, moveDown:,
               centerSelectionInVisibleArea:);

            /* GHKN_SPACE[XVIM] */  "\U0020" =
              (moveDown:, moveDown:, moveDown:, moveDown:, moveDown:,
               moveDown:, moveDown:, moveDown:, moveDown:, moveDown:,
               moveDown:, moveDown:, moveDown:, moveDown:, moveDown:,
               moveDown:, moveDown:, moveDown:, moveDown:, moveDown:,
               moveDown:, moveDown:, moveDown:, moveDown:, moveDown:);

          /* line 🔵 3 XVIM: NM(ESC),(BSPC),(ENT) */

          /* Copy next paragraph (for only select next paragraph, keep only line2 and line3) */
            /* N[XVIM] */      "n" = (setMark:,
                                      moveForward:, moveToEndOfParagraph:,
                                      moveForward:, moveToEndOfParagraphAndModifySelection:,
                                      copy:,
                                      swapWithMark:);
            /* M[XVIM] */                   "m" = scrollToBeginningOfDocument:;
            /* GHKN_ESCAPE[XVIM] */    "\U001B" = scrollPageUp:;
            /* GHKN_BACKSPACE[XVIM] */ "\U007F" = scrollPageDown:;
            /* GHKN_ENTER[XVIM] */     "\U000D" = scrollToEndOfDocument:;
        }; /* 🔴🔴🔴 XVIM: eXTRA VIM */








        /*
        * 🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥//🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥//🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥
        *    [BOOKMARK]:
        * 🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥//🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥//🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥
        */









        /* 🔵🔵🔵 ZVIM: Z - 2nd eXtra VIM */
        "z" = {

          /* line 🔵 1 ZVIM: YUIOP */

            /* Insert line above paragraph */
            /*   Y[ZVIM] */    "y" = (moveToBeginningOfParagraph:, insertNewlineIgnoringFieldEditor:, moveBackward:);

            /* transposeWord:; doesn't work.
               Then, I have made this implementation for transposing two words.
               Cursor must be to the right of any character from the second word, before transposing */
            /* U[ZVIM] */                 "u" = (selectWord:, moveForwardAndModifySelection:, setMark:, deleteToMark:,
                                                 moveBackward:, moveWordBackward:,
                                                 setMark:, yank:);
            /* 2 empty keys */
            /*  •I[ZVIM] */ /* "i" = empty :; */
            /*  •O[ZVIM] */ /* "o" = empty :; */
            /*  •P[ZVIM] */    "p" = transpose:;

          /* line 🔵 2 ZVIM: HJKL(SPACE) */

            /* Select & copy character */
            /* H[ZVIM] */              "h" = (setMark:, moveBackwardAndModifySelection:, copy:, swapWithMark:);
/* // 🐞[BUG] ??? (selectCharacter:, copy:); ??? */

            /* Select & copy word */
            /* J[ZVIM] */              "j" =  (selectWord:, copy:);
/* // 🐞[BUG] ??? */

            /* Select & copy line */
            /* K[ZVIM] */              "k" = (setMark:, moveToBeginningOfLine:, moveToEndOfLineAndModifySelection:, copy:, swapWithMark:);
/* // 🐞[BUG] selectLine ??? */

            /* Select & copy paragraph */
            /* L[ZVIM] */              "l" = (selectParagraph:, copy:);
/* // 🐞[BUG] ??? */

            /* Select & copy all */
            /* GHKN_SPACE[ZVIM] */  "\U0020" =
              (setMark:, moveToBeginningOfDocument:, moveToEndOfDocumentAndModifySelection:, copy:, swapWithMark:);
/* // 🐞[BUG] (selectAll:, copy:); ??? */

          /* line 🔵 3 ZVIM: NM(ESC),(BSPC),(ENT) */

            /* Insert line below paragraph */
            /* N[ZVIM] */                   "n" =  (moveToEndOfParagraph:, insertNewlineIgnoringFieldEditor:, deleteToBeginningOfParagraph:);

            /* M[ZVIM] */                   "m" = cut:;
            /* GHKN_ESCAPE[ZVIM] */    "\U001B" = copy:;
            /* GHKN_BACKSPACE[ZVIM] */ "\U007F" = paste:;
            /* GHKN_ENTER[ZVIM] */     "\U000D" = pasteAsRichText:;
        }; /* 🔴🔴🔴 ZVIM: Z - 2nd eXtra VIM */



        /* 🔵🔵🔵 AVIM: ALIGNMENT VIM */
        "a" = {

          /* line 🔵 1 AVIM: YUIOP */

            /* empty */
            /*   Y[AVIM] */    "y" = superscript:;

            /*  •U[AVIM] */    "u" = alignLeft:;
            /*  •I[AVIM] */    "i" = alignCenter:;
            /*  •O[AVIM] */    "o" = alignJustified:;
            /*  •P[AVIM] */    "p" = alignRight:;

          /* line 🔵 2 AVIM: HJKL(SPACE) */

            /* H[AVIM] */                "h" = unscript:;

            /* J[AVIM] */                "j" = outdent:;
            /* K[AVIM] */          /*    "k" = empty :; */
            /* L[AVIM] */          /*    "l" = empty :; */
            /* GHKN_SPACE[AVIM] */  "\U0020" = indent:;

          /* line 🔵 3 AVIM: NM(ESC),(BSPC),(ENT) */

            /* empty */
            /* N[AVIM] */                      "n" = subscript:;
            /* M[AVIM] */                      "m" = checkSpelling:;
            /* GHKN_ESCAPE[AVIM] */       "\U001B" = ignoreSpelling:;
            /* GHKN_BACKSPACE[AVIM] */ /* "\U007F" = empty :; */
            /* GHKN_ENTER[AVIM] */     /* "\U000D" = empty :; */
        }; /* 🔴🔴🔴 AVIM: ALIGNMENT VIM */


          "\U001B" = "complete:";  /* ESC-ESC */
    };


/* ⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️ */
/* ⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️ NORMAL KEYBINDINGS  ⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️ */


/* (pageUp/pageDown/home/end) to go through the document WITHOUT moving insertion point, caret */
/* 🐞🐞🐞 I've removed the next line:  "~]" = (selectParagraph:); 🐞🐞🐞 */
/*"a" = ("insertText:", "some fun text", "moveWordBackward:");*/
"~l" = (lowercaseWord:, moveForward:, moveForward:);
"~p" = (uppercaseWord:, moveForward:, moveForward:);
"~-" = (capitalizeWord:, moveForward:, moveForward:);
"~[" = (selectWord:);
/* ~] */
"\Uf72c" = scrollPageUp:;
"\Uf72d" = scrollPageDown:;
"\Uf729" = scrollToBeginningOfDocument:;
"\Uf72b" = scrollToEndOfDocument:;

/* OPTION+(pageUp/pageDown/home/end) to go through the document, while MOVING insertion point, caret */
"~\Uf72c" = pageUp:;
"~\Uf72d" = pageDown:;
/* you can put the keywords directly -how we are doing so far- or in quotation marks -as in the following instruction-. */
"~\Uf729" = "moveToBeginningOfDocument:";
"~\Uf72b" = moveToEndOfDocument:;

"@$\Uf702" = (moveLeftAndModifySelection:, moveToLeftEndOfLineAndModifySelection:);
"@\Uf702" = (moveLeft:, moveToLeftEndOfLine:);
"@$\Uf703" = (moveRightAndModifySelection:, moveToEndOfLineAndModifySelection:);
"@\Uf703" = (moveRight:, moveToEndOfLine:);


/*duplicate current paragraph below without moving the cursor
   ~3 = (setMark:, moveToBeginningOfParagraphAndModifySelection:, moveToEndOfParagraphAndModifySelection:, delete:, yank:, insertNewlineIgnoringFieldEditor:, yank:, swapWithMark:);
It's similar to "~d" that you can see below
*/
/* ~4 ♦️delete line*/
  "~4" = (moveToBeginningOfLine:, moveToEndOfLineAndModifySelection:, delete:);
/* ~5 ♦️delete to the beginning of line */
  "~5" = (moveToBeginningOfLineAndModifySelection:, delete:);      /*(deleteToBeginningOfLine:);*/
/* ~6 ♦️delete to the end of line */
  "~6" = (deleteToEndOfLine:);
/* ~7 ♦️delete to the beginning of paragraph */
  "~7" = (deleteToBeginningOfParagraph:);
/* ~8 ♦️delete to the end of paragraph */
  "~8" = (deleteToEndOfParagraph:);


/* The following keybindings are from: http://osxnotes.net/keybindings.html */
  "~w" = selectWord:;
  "~j" = (selectWord:, cut:);
  "~g" = (selectWord:, copy:);
  "~h" = (selectWord:, paste:);

  "~l" = selectParagraph:;
/* ~z ♦️delete current paragraph */
  "~z" = (selectParagraph:, deleteBackward:);
  "~x" = (selectParagraph:, cut:);
  "~c" = (selectParagraph:, copy:);

  "~s" = (moveToBeginningOfParagraphAndModifySelection:, moveToEndOfParagraphAndModifySelection:);
  "~y" = (moveToBeginningOfParagraphAndModifySelection:, moveToEndOfParagraphAndModifySelection:, deleteBackward:);
  "~q" = (moveToBeginningOfParagraphAndModifySelection:, moveToEndOfParagraphAndModifySelection:, cut:);
  "~m" = (moveToBeginningOfParagraphAndModifySelection:, moveToEndOfParagraphAndModifySelection:, copy:);

  "~a" = (moveToBeginningOfParagraphAndModifySelection:, copy:);
  "~r" = (moveToEndOfParagraphAndModifySelection:, copy:);
  "~t" = (moveToBeginningOfParagraphAndModifySelection:, cut:);
  "~k" = (moveToEndOfParagraphAndModifySelection:, cut:);

  "~v" = (delete:, setMark:, paste:, selectToMark:);

  "~3" = (setMark:, moveToBeginningOfParagraphAndModifySelection:, moveToEndOfParagraphAndModifySelection:, delete:, yank:, insertNewlineIgnoringFieldEditor:, yank:, swapWithMark:);
  "~d" = (setMark:, moveToBeginningOfParagraphAndModifySelection:, moveToEndOfParagraphAndModifySelection:, delete:, yank:, insertNewlineIgnoringFieldEditor:, yank:);

  "~-" = lowercaseWord:;
  "~=" = uppercaseWord:;
  "~." = capitalizeWord:;

  "~l" = (lowercaseWord:, moveForward:, moveForward:);
  "~p" = (uppercaseWord:, moveForward:, moveForward:);
  "~-" = (capitalizeWord:, moveForward:, moveForward:);
  "~[" = (selectWord:);

/*insert a line below the current paragraph*/
  "@\r" = (moveToEndOfParagraph:, insertNewlineIgnoringFieldEditor:, deleteToBeginningOfParagraph:);
/*insert a line above the current paragraph*/
  "$\r" = (moveToBeginningOfParagraph:, insertNewlineIgnoringFieldEditor:, moveBackward:);

/*move paragraph to one paragraph up*/
  "@^\Uf700" = (selectParagraph:, setMark:, deleteToMark:, moveBackward:, moveToBeginningOfParagraph:, setMark:, yank:, moveBackward:, selectToMark:);
/*move paragraph to one paragraph down*/
  "@^\Uf701" = (selectParagraph:, setMark:, deleteToMark:, moveToEndOfParagraph:, moveForward:, setMark:, yank:, moveBackward:, selectToMark:);

  "@\Uf728" = deleteToEndOfParagraph:;

  "^," = moveToBeginningOfDocument:;
  "^." = moveToEndOfDocument:;
  "^$," = moveToBeginningOfDocumentAndModifySelection:;
  "^$." = moveToEndOfDocumentAndModifySelection:;
  "^~," = (moveToBeginningOfDocumentAndModifySelection:, deleteBackward);
  "^~." = (moveToEndOfDocumentAndModifySelection:, deleteBackward);

/* ⭕️⭕️⭕️  END of  normal keybindings  ⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️ */
/* ⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️⭕️ */

}
