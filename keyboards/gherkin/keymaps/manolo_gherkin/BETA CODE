//
// 『🔵』『🔵』『🔵』『🔵』『🔵』『🔵』    B E T A      C  O  D  E    『🔵』『🔵』『🔵』『🔵』『🔵』『🔵』『🔵』『🔵』
//
//
// 『🔵』『🔵』『🔵』『🔵』『🔵』『🔵』    T I M E R    &    A C U T E    ( M A C R O S    &  F U N C T I O N S )    『🔵』『🔵』『🔵』『🔵』『🔵』『🔵』『🔵』『🔵』
//
//
uint16_t key_timer;
bool key_triggered = false;

bool process_record_user(uint16_t keycode, keyrecord_t *record) {
    switch(keycode) {
      case FUN_MACRO:
        if (record->event.pressed) {
          // SEND_STRING("  -  Has pulsado el botón RESET !!!  -  ");
          register_code(KC_1); unregister_code(KC_1);
          layer_on(RESE);
          key_timer = timer_read();
          key_triggered = true;
        } else {
          layer_off(RESE);
        }
        return false;
        break;
      case CUTE_ACC:
        if (record->event.pressed) {
          // SEND_STRING("");
          // UC(UC_A_AC);  unregister_code(UC(UC_A_AC));
          // SEND_STRING("DETECTADO MACRO: CUTE_ACC");
          // send_unicode_hex_string("0301");
          register_code(KC_2);  unregister_code(KC_2);
          return false;
          break;
        }
        return false;
    }
  return true;
};

void matrix_scan_user(void) {
  if ( key_triggered && ( timer_elapsed(key_timer) < 300 ) ) {
    // do the thing
    register_code(KC_E); unregister_code(KC_E);
    key_triggered = false;
  }
}




void action_function(keyrecord_t *record, uint8_t id, uint8_t opt) {
  // static uint8_t mods_pressed;

  switch (id) {
    case 0:
      /* Handle the combined Grave/Esc key
       */
      // mods_pressed = get_mods()&GRAVE_MODS; // Check to see what mods are pressed

      if (record->event.pressed) {

         reset_keyboard();

        /* The key is being pressed.
         */
        // if (mods_pressed) {
          // add_key(KC_GRV);
          // send_keyboard_report();
        // } else {
          // add_key(KC_ESC);
          // send_keyboard_report();
        // }
      } // else {
        /* The key is being released.
         */
        // if (mods_pressed) {
          // del_key(KC_GRV);
          // send_keyboard_report();
        // } else {
          // del_key(KC_ESC);
          // send_keyboard_report();
        // }
      // }
      break;
  }
}
